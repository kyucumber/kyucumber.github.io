{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/frontend/axios-handle-byte-array-response/","result":{"data":{"markdownRemark":{"id":"5f8312b6-c841-58e6-a1c5-53c902b83506","html":"<p>서버에서 ByteArray 형태의 응답을 내려주는 경우에 파일을 처리하는 방법을 정리합니다.</p>\n<h2 id=\"서버-응답-예시\" style=\"position:relative;\"><a href=\"#%EC%84%9C%EB%B2%84-%EC%9D%91%EB%8B%B5-%EC%98%88%EC%8B%9C\" aria-label=\"서버 응답 예시 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>서버 응답 예시</h2>\n<p>아래와 같이 ByteArray 형태로 파일을 응답하는 API가 존재한다고 가정합니다.</p>\n<deckgo-highlight-code language=\"kotlin\"  terminal=\"carbon\" theme=\"dracula\" >\n          <code slot=\"code\">@GetMapping\nfun download(@RequestParam key: String): ResponseEntity&lt;ByteArray&gt; {\n    val file = fileService.download(key)\n\n    return ResponseEntity.ok()\n        .contentType(MediaType.parseMediaType(file.contentType))\n        .contentLength(file.contentLength)\n        .body(file.content)\n}</code>\n        </deckgo-highlight-code>\n<h2 id=\"프론트에서의-처리\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%90%EC%84%9C%EC%9D%98-%EC%B2%98%EB%A6%AC\" aria-label=\"프론트에서의 처리 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프론트에서의 처리</h2>\n<p>프론트에서 해당 Byte Array를 받아 처리하려고 하는데 응답을 받아 Blob에 대해 처리하는 부분이 잘 동작하지 않았습니다.</p>\n<p>조금 찾아보니 axios의 기본 responseType 처리가 json이라 별도의 responseType을 설정해주어야 합니다.</p>\n<deckgo-highlight-code language=\"kotlin\"  terminal=\"carbon\" theme=\"dracula\" >\n          <code slot=\"code\">responseType: &#39;json&#39;, // default</code>\n        </deckgo-highlight-code>\n<p>get 요청 시 아래와 같이 responseType을 지정해줍니다.</p>\n<deckgo-highlight-code language=\"kotlin\"  terminal=\"carbon\" theme=\"dracula\" >\n          <code slot=\"code\">axios.get(this._url, {\n  responseType: &#39;blob&#39;\n})</code>\n        </deckgo-highlight-code>\n<p>받은 응답값은 아래와 같이 활용해 Blob을 생성할 수 있습니다.</p>\n<p>Blob을 생성한 뒤 window.URL.createObjectURL을 호출해 url을 반환받아 활용하면 됩니다.</p>\n<deckgo-highlight-code language=\"typescript\"  terminal=\"carbon\" theme=\"dracula\" >\n          <code slot=\"code\">export interface FileData {\n  data: Blob;\n  contentType: string;\n}\n\nawait res = s3FileStore.fetchS3Download(employee.imageUrl) // return FileData\n\nconst blob = new Blob([res.data], { type: res.contentType });\nconst url = window.URL.createObjectURL(blob);\n\nsetProfileImage(url);</code>\n        </deckgo-highlight-code>\n<h2 id=\"reference\" style=\"position:relative;\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reference</h2>\n<ul>\n<li><a href=\"https://axios-http.com/docs/req_config\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Axios Docs, Request Config</a></li>\n<li><a href=\"https://stackoverflow.com/questions/60454048/how-does-axios-handle-blob-vs-arraybuffer-as-responsetype\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://stackoverflow.com/questions/60454048/how-does-axios-handle-blob-vs-arraybuffer-as-responsetype</a></li>\n</ul>","tableOfContents":"<ul>\n<li><a href=\"/posts/frontend/axios-handle-byte-array-response/#%EC%84%9C%EB%B2%84-%EC%9D%91%EB%8B%B5-%EC%98%88%EC%8B%9C\">서버 응답 예시</a></li>\n<li><a href=\"/posts/frontend/axios-handle-byte-array-response/#%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%90%EC%84%9C%EC%9D%98-%EC%B2%98%EB%A6%AC\">프론트에서의 처리</a></li>\n<li><a href=\"/posts/frontend/axios-handle-byte-array-response/#reference\">Reference</a></li>\n</ul>","fields":{"slug":"/posts/frontend/axios-handle-byte-array-response/","tagSlugs":["/tag/frontend/","/tag/axios/"]},"frontmatter":{"date":"2020-12-10T00:00:00.000Z","description":"axios 에서 Blob 형태 파일 응답을 처리하는 방법을 정리합니다.","tags":["Frontend","axios"],"title":"axios 에서 Blob 형태 파일 응답 처리하기","socialImage":{"publicURL":"/static/3fb2d4de4502fbae8b21ee45fe945cf4/kyucumber.jpg"}}}},"pageContext":{"slug":"/posts/frontend/axios-handle-byte-array-response/"}},"staticQueryHashes":["2067870509","251939775","401334301"]}