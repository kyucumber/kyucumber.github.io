{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/spring/rest-high-level-client-unit-test/","result":{"data":{"markdownRemark":{"id":"2ff33500-9809-500f-b7b7-bd19343d332c","html":"<p>Spring에서 RestHighLevelClient 관련 unit 테스트 작성시 SearchResponse의 더미 데이터 생성 예제</p>\n<h2 id=\"searchresponse-데이터-생성을-위한-util-클래스-정의\" style=\"position:relative;\"><a href=\"#searchresponse-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%83%9D%EC%84%B1%EC%9D%84-%EC%9C%84%ED%95%9C-util-%ED%81%B4%EB%9E%98%EC%8A%A4-%EC%A0%95%EC%9D%98\" aria-label=\"searchresponse 데이터 생성을 위한 util 클래스 정의 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SearchResponse 데이터 생성을 위한 Util 클래스 정의</h2>\n<p><code class=\"language-text\">ElasticsearchTestUtils.kt</code></p>\n<deckgo-highlight-code language=\"kotlin\"  terminal=\"carbon\" theme=\"dracula\" >\n          <code slot=\"code\">object ElasticsearchTestUtils {\n    fun getSearchResponseFromJson(jsonResponse: String): SearchResponse {\n        try {\n            val registry = NamedXContentRegistry(getDefaultNamedXContents())\n            val parser: XContentParser =\n                JsonXContent.jsonXContent.createParser(registry, DeprecationHandler.THROW_UNSUPPORTED_OPERATION, jsonResponse)\n            return SearchResponse.fromXContent(parser)\n        } catch (e: IOException) {\n            println(&quot;exception $e&quot;)\n        } catch (e: Exception) {\n            println(&quot;exception $e&quot;)\n        }\n        throw IllegalStateException(&quot;invalid state&quot;)\n    }\n\n    private fun getDefaultNamedXContents(): List&lt;NamedXContentRegistry.Entry&gt; {\n        val map: MutableMap&lt;String, ContextParser&lt;Any, out Aggregation&gt;&gt; = HashMap()\n        map[TopHitsAggregationBuilder.NAME] =\n            ContextParser { p: XContentParser?, c: Any? -&gt; ParsedTopHits.fromXContent(p, c as String?) }\n        map[StringTerms.NAME] =\n            ContextParser { p: XContentParser?, c: Any? -&gt; ParsedStringTerms.fromXContent(p, c as String?) }\n        return map.entries.stream()\n            .map { entry: Map.Entry&lt;String, ContextParser&lt;Any, out Aggregation&gt;&gt; -&gt;\n                NamedXContentRegistry.Entry(\n                    Aggregation::class.java, ParseField(entry.key), entry.value\n                )\n            }.toList()\n    }\n}</code>\n        </deckgo-highlight-code>\n<h2 id=\"searchresponse-생성을-위한-json-파일-생성\" style=\"position:relative;\"><a href=\"#searchresponse-%EC%83%9D%EC%84%B1%EC%9D%84-%EC%9C%84%ED%95%9C-json-%ED%8C%8C%EC%9D%BC-%EC%83%9D%EC%84%B1\" aria-label=\"searchresponse 생성을 위한 json 파일 생성 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SearchResponse 생성을 위한 json 파일 생성</h2>\n<p><code class=\"language-text\">test/resources/json/search.json</code></p>\n<deckgo-highlight-code language=\"json\"  terminal=\"carbon\" theme=\"dracula\" >\n          <code slot=\"code\">{\n    &quot;took&quot; : 3,\n    &quot;timed_out&quot; : false,\n    &quot;_shards&quot; : {\n        &quot;total&quot; : 6,\n        &quot;successful&quot; : 6,\n        &quot;skipped&quot; : 0,\n        &quot;failed&quot; : 0\n    },\n    &quot;hits&quot; : {\n        &quot;total&quot; : {\n            &quot;value&quot; : 3,\n            &quot;relation&quot; : &quot;eq&quot;\n        },\n        &quot;max_score&quot; : 1.0,\n        &quot;hits&quot; : [\n            {\n                &quot;_index&quot; : &quot;index&quot;,\n                &quot;_type&quot; : &quot;_doc&quot;,\n                &quot;_id&quot; : &quot;1&quot;,\n                &quot;_score&quot; : 1.0,\n                &quot;_source&quot; : {\n                }\n            }\n        ]\n    }\n}</code>\n        </deckgo-highlight-code>\n<h2 id=\"resthighlevelclient-mocking이-필요한-테스트-작성\" style=\"position:relative;\"><a href=\"#resthighlevelclient-mocking%EC%9D%B4-%ED%95%84%EC%9A%94%ED%95%9C-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%9E%91%EC%84%B1\" aria-label=\"resthighlevelclient mocking이 필요한 테스트 작성 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>RestHighLevelClient mocking이 필요한 테스트 작성</h2>\n<deckgo-highlight-code language=\"kotlin\"  terminal=\"carbon\" theme=\"dracula\" >\n          <code slot=\"code\">describe(&quot;elasticsearch client unit test&quot;) {\n    val elasticsearchClient = mockk&lt;RestHighLevelClient&gt;()\n    val lastAccessService = LastAccessSearchService(\n        elasticsearchClient = elasticsearchClient,\n        fullAuthAccessInfoDeserializer = FullAuthAccessInfoDeserializer()\n    )\n\n    context(&quot;key를 통해 검색하는 경우&quot;) {\n        val query = Query()\n        val key = &quot;key&quot;\n\n        it(&quot;해당 key에 해당하는 모든 유저 목록을 불러온다&quot;) {\n            val searchResponse: SearchResponse = ElasticsearchTestUtils.getSearchResponseFromJson(ClassPathResource(&quot;json/search.json&quot;).file.readText())\n            every { elasticsearchClient.search(query.createRequest(), RequestOptions.DEFAULT) } answers { searchResponse }\n\n            val searchResults = elasticsearchService.search(key)\n\n            assertThat(searchResults[0].key).isEqualTo(key)\n        }\n    }\n}</code>\n        </deckgo-highlight-code>\n<ul>\n<li><a href=\"https://discuss.elastic.co/t/elasticsearch-json-response-to-searchresponse-object/124394/4\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://discuss.elastic.co/t/elasticsearch-json-response-to-searchresponse-object/124394/4</a></li>\n</ul>","tableOfContents":"<ul>\n<li><a href=\"/posts/spring/rest-high-level-client-unit-test/#searchresponse-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%83%9D%EC%84%B1%EC%9D%84-%EC%9C%84%ED%95%9C-util-%ED%81%B4%EB%9E%98%EC%8A%A4-%EC%A0%95%EC%9D%98\">SearchResponse 데이터 생성을 위한 Util 클래스 정의</a></li>\n<li><a href=\"/posts/spring/rest-high-level-client-unit-test/#searchresponse-%EC%83%9D%EC%84%B1%EC%9D%84-%EC%9C%84%ED%95%9C-json-%ED%8C%8C%EC%9D%BC-%EC%83%9D%EC%84%B1\">SearchResponse 생성을 위한 json 파일 생성</a></li>\n<li><a href=\"/posts/spring/rest-high-level-client-unit-test/#resthighlevelclient-mocking%EC%9D%B4-%ED%95%84%EC%9A%94%ED%95%9C-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%9E%91%EC%84%B1\">RestHighLevelClient mocking이 필요한 테스트 작성</a></li>\n</ul>","fields":{"slug":"/posts/spring/rest-high-level-client-unit-test/","tagSlugs":["/tag/spring/","/tag/rest-high-level-client/"]},"frontmatter":{"date":"2021-02-10T00:00:00.000Z","description":"Spring Elasticsearch RestHighLevelClient 사용 시 단위 테스트 작성을 위한 SearchResponse 더미 데이터 생성하기","tags":["Spring","RestHighLevelClient"],"title":"RestHighLevelClient 테스트 작성 시 SearchResponse 더미 데이터 생성하기","socialImage":{"publicURL":"/static/69c1ea5ccd3b858a08b583ced6c5ccf0/gatsby.png"}}}},"pageContext":{"slug":"/posts/spring/rest-high-level-client-unit-test/"}},"staticQueryHashes":["2067870509","251939775","401334301"]}