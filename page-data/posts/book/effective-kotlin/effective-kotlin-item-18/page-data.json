{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/book/effective-kotlin/effective-kotlin-item-18","result":{"data":{"markdownRemark":{"id":"99e0bc99-86de-5a9f-ae48-9b3e07e7c80d","html":"<p><a href=\"https://kotlinlang.org/docs/coding-conventions.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">코틀린 문서의 Coding Convensions</a></p>\n<p>코틀린 커뮤니티에 속한 사람이라면 이러한 컨벤션을 최대한 지켜주는 것이 좋다. 이를 지키면 아래와 같은 장점이 있다.</p>\n<ul>\n<li>어떤 프로젝트를 접해도 쉽게 이해할 수 있다.</li>\n<li>외부 개발자도 프로젝트의 코드를 쉽게 이해할 수 있다.</li>\n<li>다른 개발자도 코드의 작동 방식을 쉽게 추측할 수 있다.</li>\n<li>코드를 병합하고, 프로젝트의 코드 일부를 다른 프로젝트로 이동하는것이 쉽다.</li>\n</ul>\n<p>컨벤션을 지킬 때 도움이 되는 도구들</p>\n<ul>\n<li>Intellij Formatter(Predefined style/Kotlin style guide)</li>\n<li>ktlint</li>\n</ul>\n<p>자주 위반되는 규칙 중 하나는 클래스와 함수의 형식이다.</p>\n<deckgo-highlight-code language=\"kotlin\" terminal=\"carbon\" theme=\"one-light\"  >\n          <code slot=\"code\">// BAD\nclass FullName(val name: String, val surname: String)\n\n// GOOD\nclass Person(\n    val id: Int = 0,\n    val name: String = &quot;&quot;,\n    val surname: String = &quot;&quot;\n)</code>\n        </deckgo-highlight-code>\n<p>함수도 파라미터를 많이 갖고 있고 길다면 아래와 같이 작성한다.</p>\n<deckgo-highlight-code language=\"kotlin\" terminal=\"carbon\" theme=\"one-light\"  >\n          <code slot=\"code\">public fun &lt;T&gt; Iterable&lt;T&gt;.joinToString(\n    separator: CharSequence = &quot;, &quot;,\n    prefix: CharSequence = &quot;&quot;,\n    // ...\n)</code>\n        </deckgo-highlight-code>\n<p>아래와 같이 작성하는 것은 두가지 측면에서 문제가 될 수 있다.</p>\n<deckgo-highlight-code language=\"kotlin\" terminal=\"carbon\" theme=\"one-light\"  >\n          <code slot=\"code\">Class Person(val id: Int = 0,\n    val name: String = &quot;&quot;,\n    val surname: String = &quot;&quot;)</code>\n        </deckgo-highlight-code>\n<ul>\n<li>모든 클래스의 아규먼트가 클래스 이름에 따라 다른 크기의 들여쓰기를 갖는다. 이 경우 클래스 이름 변경 시 모든 기본 생성자 파라미터의 들여쓰기가 변경된다.</li>\n<li>클래스가 차지하는 공간의 너비가 너무 크다.</li>\n</ul>\n<p>일부 팀이 다른 규칙을 사용하기로 결정할 수 있지만 프로젝트의 컨벤션은 반드시 지켜주는 것이 좋다.</p>\n<h2 id=\"reference\" style=\"position:relative;\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reference</h2>\n<ul>\n<li>이펙티브 코틀린 - 프로그래밍 인사이트, 마르친 모스칼라 지음, 윤인성 옮김</li>\n</ul>\n<p>개인적인 기록을 위해 작성된 글이라 잘못된 내용이 있을 수 있습니다.</p>\n<p>오류가 있다면 댓글을 남겨주세요.</p>","tableOfContents":"<ul>\n<li><a href=\"/posts/book/effective-kotlin/effective-kotlin-item-18/#reference\">Reference</a></li>\n</ul>","fields":{"slug":"/posts/book/effective-kotlin/effective-kotlin-item-18","tagSlugs":null},"frontmatter":{"date":"2022-02-16T00:58:00.000Z","description":"Effective Kotlin Item 18. 코딩 컨벤션을 지켜라","tags":null,"title":"이펙티브 코틀린 아이템 18. 코딩 컨벤션을 지켜라","socialImage":{"publicURL":"/static/3fb2d4de4502fbae8b21ee45fe945cf4/kyucumber.jpg"}}}},"pageContext":{"slug":"/posts/book/effective-kotlin/effective-kotlin-item-18"}},"staticQueryHashes":["2067870509","251939775","401334301"]}