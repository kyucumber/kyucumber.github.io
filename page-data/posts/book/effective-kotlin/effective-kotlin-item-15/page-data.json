{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/book/effective-kotlin/effective-kotlin-item-15","result":{"data":{"markdownRemark":{"id":"80cd7fd2-fdc2-5b66-8290-3e610fa8ec9b","html":"<p>무언가를 자세히 설명하기 위해 명시적으로 더 긴 코드를 사용할 때가 있다.</p>\n<ul>\n<li>클래스의 메소드임을 나타내기 위해 this를 사용하는 경우</li>\n</ul>\n<deckgo-highlight-code language=\"kotlin\"  terminal=\"carbon\" theme=\"dracula\" >\n          <code slot=\"code\">class Test {\n    private var num: Int = 0\n    \n    fun test() {\n        this.num += 1\n    }</code>\n        </deckgo-highlight-code>\n<ul>\n<li>확장 리시버를 명시적으로 참조하게 하는 경우</li>\n</ul>\n<deckgo-highlight-code language=\"kotlin\"  terminal=\"carbon\" theme=\"dracula\" >\n          <code slot=\"code\">fun &lt;T: comparable&lt;T&gt;&gt; List&lt;T&gt;.quickSort(): List&lt;T&gt; {\n    // ...\n    val pivot = this.first() // this를 붙인 부분\n    \n    // ...\n}</code>\n        </deckgo-highlight-code>\n<h2 id=\"여러-개의-리시버\" style=\"position:relative;\"><a href=\"#%EC%97%AC%EB%9F%AC-%EA%B0%9C%EC%9D%98-%EB%A6%AC%EC%8B%9C%EB%B2%84\" aria-label=\"여러 개의 리시버 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>여러 개의 리시버</h2>\n<p>스코프 내부에 둘 이상의 리시버가 있는 경우 리시버를 명시적으로 나타내는게 좋다.</p>\n<ul>\n<li>AS-IS</li>\n</ul>\n<deckgo-highlight-code language=\"kotlin\"  terminal=\"carbon\" theme=\"dracula\" >\n          <code slot=\"code\">class Node(val name: String) {\n    fun makeChild(childName: String) =\n        create(&quot;$name.$childName&quot;).apply {\n            println(&quot;Created $name&quot;)\n        }\n\n    private fun create(name: String): Node? = Node(name)\n}</code>\n        </deckgo-highlight-code>\n<p>위의 예는 name이 Node의 name을 참조하는 것이 아니라 생성자로 전달된 name을 참조하게 된다.</p>\n<ul>\n<li>TO-BE</li>\n</ul>\n<deckgo-highlight-code language=\"kotlin\"  terminal=\"carbon\" theme=\"dracula\" >\n          <code slot=\"code\">class Node(val name: String) {\n    fun makeChild(childName: String) =\n        create(&quot;$name.$childName&quot;).apply {\n            println(&quot;Created ${this?.name}&quot;)\n        }\n\n    private fun create(name: String): Node? = Node(name)\n}</code>\n        </deckgo-highlight-code>\n<p>수정된 코드에서 문제는 해결되었지만 apply가 아닌 also를 사용했다면 이런 문제 자체가 일어나지 않는다.</p>\n<p>일반적으로 also, let을 사용하는 것이 nullable 값을 처리할 때 훨씬 좋은 선택지이다.</p>\n<deckgo-highlight-code language=\"kotlin\"  terminal=\"carbon\" theme=\"dracula\" >\n          <code slot=\"code\">create(&quot;$name.$childName&quot;).also {\n    println(&quot;Created $it?.name&quot;)\n}</code>\n        </deckgo-highlight-code>\n<p>리시버가 명확하지 않으면 아래와 같이 명시적으로 리서버를 적어서 명확하게 하자.</p>\n<deckgo-highlight-code language=\"kotlin\"  terminal=\"carbon\" theme=\"dracula\" >\n          <code slot=\"code\">class Node(val name: String) {\n    fun makeChild(childName: String) =\n        create(&quot;$name.$childName&quot;).apply {\n            println(&quot;Created ${this?.name} ${this@Node.name}&quot;)\n        }\n\n    private fun create(name: String): Node? = Node(name)\n}</code>\n        </deckgo-highlight-code>\n<h2 id=\"dsl-마커\" style=\"position:relative;\"><a href=\"#dsl-%EB%A7%88%EC%BB%A4\" aria-label=\"dsl 마커 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DSL 마커</h2>\n<p>DSL을 사용할 때는 리시버를 가진 요소가 중첩되더라도 명시적으로 리시버를 붙이지 않는다.</p>\n<deckgo-highlight-code language=\"kotlin\"  terminal=\"carbon\" theme=\"dracula\" >\n          <code slot=\"code\">table {\n    tr {\n        td { +&quot;Column 1&quot; }\n    }\n}</code>\n        </deckgo-highlight-code>\n<p>기본적으로 모든 스코프에서 외부 스코프 리시버의 메소드를 사용할 수 있지만 아래와 같은 경우 코드에 문제가 발생한다.</p>\n<deckgo-highlight-code language=\"kotlin\"  terminal=\"carbon\" theme=\"dracula\" >\n          <code slot=\"code\">table {\n    tr {\n        td { +&quot;Column 1&quot; }\n        tr {\n            td { +&quot;Value 1&quot; }\n        }\n    }\n}</code>\n        </deckgo-highlight-code>\n<p>이러한 잘못된 사용을 막으려면 암묵적으로 외부 리시버를 사용하는것을 막는 DslMarker라는 메타 어노테이션을 사용해야 한다.</p>\n<deckgo-highlight-code language=\"kotlin\"  terminal=\"carbon\" theme=\"dracula\" >\n          <code slot=\"code\">@DslMarker\nannotation class HtmlDsl\n\n@DslMarker\nannotation class TableDsl</code>\n        </deckgo-highlight-code>\n<p>이렇게 하면 외부 리시버 사용이 금지되며, 원한다면 명시적으로 지정해 사용할 수 있다.</p>\n<deckgo-highlight-code language=\"kotlin\"  terminal=\"carbon\" theme=\"dracula\" >\n          <code slot=\"code\">table {\n    tr {\n        td { +&quot;Column 1&quot; }\n        tr { // 컴파일 오류\n            td { +&quot;Value 1&quot; }\n        }\n    }\n}\n\ntable {\n    tr {\n        td { +&quot;Column 1&quot; }\n        this@table.tr {\n            td { +&quot;Value 1&quot; }\n        }\n    }\n}</code>\n        </deckgo-highlight-code>\n<h2 id=\"정리\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EB%A6%AC\" aria-label=\"정리 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정리</h2>\n<ul>\n<li>짧게 적을 수 있다는 이유만으로 리시버를 제거하지 말자.</li>\n<li>여러개의 리시버가 있는 상황 등에는 리시버를 명시적으로 적어주는 것이 좋다.</li>\n<li>DSL에서 외부 스코프의 리시버를 적게 강제하고 싶다면 DslMarker 메타 어노테이션을 사용하자</li>\n</ul>\n<h2 id=\"reference\" style=\"position:relative;\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reference</h2>\n<ul>\n<li>이펙티브 코틀린 - 프로그래밍 인사이트, 마르친 모스칼라 지음, 윤인성 옮김</li>\n</ul>\n<p>개인적인 기록을 위해 작성된 글이라 잘못된 내용이 있을 수 있습니다.</p>\n<p>오류가 있다면 댓글을 남겨주세요.</p>","tableOfContents":"<ul>\n<li><a href=\"/posts/book/effective-kotlin/effective-kotlin-item-15/#%EC%97%AC%EB%9F%AC-%EA%B0%9C%EC%9D%98-%EB%A6%AC%EC%8B%9C%EB%B2%84\">여러 개의 리시버</a></li>\n<li><a href=\"/posts/book/effective-kotlin/effective-kotlin-item-15/#dsl-%EB%A7%88%EC%BB%A4\">DSL 마커</a></li>\n<li><a href=\"/posts/book/effective-kotlin/effective-kotlin-item-15/#%EC%A0%95%EB%A6%AC\">정리</a></li>\n<li><a href=\"/posts/book/effective-kotlin/effective-kotlin-item-15/#reference\">Reference</a></li>\n</ul>","fields":{"slug":"/posts/book/effective-kotlin/effective-kotlin-item-15","tagSlugs":null},"frontmatter":{"date":"2022-02-16T00:15:00.000Z","description":"Effective Kotlin Item 15. 리시버를 명시적으로 참조하라","tags":null,"title":"이펙티브 코틀린 아이템 15. 리시버를 명시적으로 참조하라","socialImage":{"publicURL":"/static/3fb2d4de4502fbae8b21ee45fe945cf4/kyucumber.jpg"}}}},"pageContext":{"slug":"/posts/book/effective-kotlin/effective-kotlin-item-15"}},"staticQueryHashes":["2067870509","251939775","401334301"]}